{"version":3,"sources":["component/CodeEditor.js","hooks/useLocalStorage.js","component/App.js","index.js"],"names":["CodeEditor","props","language","displayName","value","onChange","useState","open","setOpen","className","name","type","onClick","prevOpen","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setcss","jscript","setjscript","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAQe,SAASA,EAAWC,GACjC,IACEC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAEF,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACE,sBAAKC,UAAS,sCACUF,EAAO,GAAK,YADtB,UAAd,UAGE,sBAAKE,UAAU,oBAAf,UACGN,EACD,wBACEO,KAAK,aACLC,KAAK,SACLF,UAAU,iBACVG,QAAS,kBAAMJ,GAAQ,SAAAK,GAAQ,OAAKA,MAJtC,4BAQF,cAAC,aAAD,CACEC,eAnBN,SAAsBC,EAAQC,EAAMZ,GAClCC,EAASD,IAmBLA,MAAOA,EACPK,UAAU,oBACVQ,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMlB,EACNmB,MAAO,WACPC,aAAa,QCxCR,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,cAGgBF,EAE7B,EAA0BlB,oBAAS,WACjC,IAAMqB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAPX,mBAAOrB,EAAP,KAAc4B,EAAd,KAeA,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU/B,MAChD,CAACsB,EAAatB,IAEV,CAACA,EAAO4B,GCmCFI,MArDf,WACE,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAA8BjB,EAAgB,KAAM,IAApD,mBAAOkB,EAAP,KAAgBC,EAAhB,KACA,EAA4BpC,mBAAS,IAArC,mBAAOqC,EAAP,KAAeC,EAAf,KAgBA,OAdAX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,qCAAD,OAEGP,EAFH,qCAGIE,EAHJ,uCAIKE,EAJL,0CAOR,KAEH,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAGb,qCACE,sBAAKhC,UAAU,iBAAf,UACE,cAACT,EAAD,CACEE,SAAS,MACTC,YAAY,OACZC,MAAOiC,EACPhC,SAAUiC,IAEZ,cAACtC,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAOmC,EACPlC,SAAUmC,IAEZ,cAACxC,EAAD,CACEE,SAAS,aACTC,YAAY,KACZC,MAAOqC,EACPpC,SAAUqC,OAGd,qBAAKjC,UAAU,OAAf,SACE,wBAAQA,UAAU,SAChBkC,OAAQA,EACRK,MAAM,SACNC,QAAQ,wB,MC9ClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56442ecd.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/css/css'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\n\r\nexport default function CodeEditor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`\r\n    code-editor-container ${open ? '' : 'collapsed'}\r\n    `}>\r\n      <div className=\"code-editor-title\">\r\n        {displayName}\r\n        <button \r\n          name=\"Open/Close\"\r\n          type=\"button\"\r\n          className=\"open-close-btn\"\r\n          onClick={() => setOpen(prevOpen => !prevOpen)}\r\n        > Open/Close\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"CodeMirrorWrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'code-editor'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n  }, [prefixedKey, value])\r\n\r\n  return [value, setValue]\r\n}","import React, { useState, useEffect } from 'react';\nimport CodeEditor from './CodeEditor'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nfunction App() {\n  const [html, setHtml] = useLocalStorage('html', '')\n  const [css, setcss] = useLocalStorage('css', '')\n  const [jscript, setjscript] = useLocalStorage('js', '')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n        <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${jscript}</script>\n        </html>\n      `)\n    }, 250)\n\n    return () => clearTimeout(timeout)\n  }, [html, css, jscript])\n\n  return (\n    <>\n      <div className=\"pane code-area\">\n        <CodeEditor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <CodeEditor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setcss}\n        />\n        <CodeEditor\n          language=\"javascript\"\n          displayName=\"JS\"\n          value={jscript}\n          onChange={setjscript}\n        />\n      </div>\n      <div className=\"pane\">\n        <iframe className=\"iframe\"\n          srcDoc={srcDoc}\n          title=\"output\"\n          sandbox=\"allow-scripts\"\n        />\n      </div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './index.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}